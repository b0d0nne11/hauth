swagger: '2.0'
info:
  title: Hauth API
  description: A slightly less horrible identity API.
  version: "0.2.0"
host: localhost:8080
schemes:
  - http
basePath: /
consumes:
  - text/plain; charset=utf-8
  - application/json
produces:
  - application/json
paths:
  /accounts:
    get:
      summary: List accounts
      description: |
        Get a list of accounts.
      parameters:
        - name: name
          in: query
          description: Filter by name
          required: false
          type: string
        - name: order
          in: query
          description: List sorting order
          required: false
          type: string
          enum:
            - "asc"
            - "desc"
        - name: limit
          in: query
          description: List item limit
          required: false
          type: integer
          minimum: 1
          maximum: 1000
        - name: after
          in: query
          description: List lower bound
          required: false
          type: integer
        - name: before
          in: query
          description: List upper bound
          required: false
          type: integer
      tags:
        - Accounts
      responses:
        200:
          description: List of accounts
          schema:
            $ref: '#/definitions/Accounts'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create account
      description: |
        Create a new account.
      consumes:
        - application/json
      parameters:
        - name: account
          in: body
          description: Create parameters
          required: true
          schema:
            $ref: '#/definitions/AccountCreateParams'
      tags:
        - Accounts
      responses:
        302:
          description: Redirect to new account
          headers:
            Location:
              type: string
              description: URL
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
  /accounts/{account_id}:
    get:
      summary: Get account
      description: |
        Get an account.
      parameters:
        - name: account_id
          in: path
          description: Account ID
          required: true
          type: integer
      tags:
        - Accounts
      responses:
        200:
          description: Account
          schema:
            $ref: '#/definitions/Account'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Update account
      description: |
        Update an existing account.
      consumes:
        - application/json
      parameters:
        - name: account_id
          in: path
          description: Account ID
          required: true
          type: integer
        - name: account
          in: body
          description: Update parameters
          required: true
          schema:
            $ref: '#/definitions/AccountUpdateParams'
      tags:
        - Accounts
      responses:
        204:
          description: Empty response
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete account
      description: |
        Delete an account.
      parameters:
        - name: account_id
          in: path
          description: Account ID
          required: true
          type: integer
      tags:
        - Accounts
      responses:
        204:
          description: Empty response
        404:
          description: Not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
  /accounts/{account_id}/users:
    get:
      summary: List users
      description: |
        Get a list of users.
      parameters:
        - name: account_id
          in: path
          description: Account ID
          required: true
          type: integer
        - name: name
          in: query
          description: Filter by name
          required: false
          type: string
        - name: email
          in: query
          description: Filter by email
          required: false
          type: string
        - name: order
          in: query
          description: List sorting order
          required: false
          type: string
          enum:
            - "asc"
            - "desc"
        - name: limit
          in: query
          description: List item limit
          required: false
          type: integer
          minimum: 1
          maximum: 1000
        - name: after
          in: query
          description: List lower bound
          required: false
          type: integer
        - name: before
          in: query
          description: List upper bound
          required: false
          type: integer
      tags:
        - Users
      responses:
        200:
          description: List of users
          schema:
            $ref: '#/definitions/Users'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create user
      description: |
        Create a new user.
      consumes:
        - application/json
      parameters:
        - name: account_id
          in: path
          description: Account ID
          required: true
          type: integer
        - name: user
          in: body
          description: Create parameters
          required: true
          schema:
            $ref: '#/definitions/UserCreateParams'
      tags:
        - Users
      responses:
        302:
          description: Redirect to new user
          headers:
            Location:
              type: string
              description: URL
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
  /accounts/{account_id}/users/{user_id}:
    get:
      summary: Get user
      description: |
        Get a user.
      parameters:
        - name: account_id
          in: path
          description: Account ID
          required: true
          type: integer
        - name: user_id
          in: path
          description: User ID
          required: true
          type: integer
      tags:
        - Users
      responses:
        200:
          description: User
          schema:
            $ref: '#/definitions/User'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Update user
      description: |
        Update an existing user.
      consumes:
        - application/json
      parameters:
        - name: account_id
          in: path
          description: Account ID
          required: true
          type: integer
        - name: user_id
          in: path
          description: User ID
          required: true
          type: integer
        - name: user
          in: body
          description: Update parameters
          required: true
          schema:
            $ref: '#/definitions/UserUpdateParams'
      tags:
        - Users
      responses:
        204:
          description: Empty response
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete user
      description: |
        Delete a user.
      parameters:
        - name: account_id
          in: path
          description: Account ID
          required: true
          type: integer
        - name: user_id
          in: path
          description: User ID
          required: true
          type: integer
      tags:
        - Users
      responses:
        204:
          description: Empty response
        404:
          description: Not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
  /accounts/{account_id}/tokens:
    post:
      summary: Authenticate
      description: |
        Authenticate a user and generate a token.
      consumes:
        - application/json
      parameters:
        - name: account_id
          in: path
          description: Account ID
          required: true
          type: integer
        - name: credentials
          in: body
          description: User credentials
          required: true
          schema:
            $ref: '#/definitions/Credentials'
      tags:
        - Tokens
      responses:
        200:
          description: Authenticated token
          schema:
            $ref: '#/definitions/Token'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        404:
          description: User not found or invalid password
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
  /accounts/{account_id}/tokens/{token}:
    get:
      summary: Validate token
      description: |
        Validate a token.
      parameters:
        - name: account_id
          in: path
          description: Account ID
          required: true
          type: integer
        - name: token
          in: path
          description: Token
          required: true
          type: integer
      tags:
        - Tokens
      responses:
        200:
          description: Validated user
          schema:
            $ref: '#/definitions/User'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Invalid token
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Account:
    type: object
    properties:
      account_id:
        type: integer
        description: Account ID
      name:
        type: string
        description: Account name
  Accounts:
    type: array
    items:
      $ref: '#/definitions/Account'
  AccountCreateParams:
    type: object
    properties:
      name:
        type: string
        description: Account name
        required: true
  AccountUpdateParams:
    type: object
    properties:
      name:
        type: string
        description: Account name
        required: false
  User:
    type: object
    properties:
      account_id:
        type: integer
        description: Account ID
      user_id:
        type: integer
        description: User ID
      name:
        type: string
        description: User name
      email:
        type: string
        description: User email
  Users:
    type: array
    items:
      $ref: '#/definitions/User'
  UserCreateParams:
    type: object
    properties:
      name:
        type: string
        description: User name
        required: true
      password:
        type: string
        description: User password
        required: true
      email:
        type: string
        description: User email
        required: true
  UserUpdateParams:
    type: object
    properties:
      name:
        type: string
        description: User name
        required: false
      password:
        type: string
        description: User password
        required: false
      email:
        type: string
        description: User email
        required: false
  Credentials:
    type: object
    properties:
      username:
        type: string
        description: User name
      password:
        type: string
        description: User password
  Token:
    type: object
    properties:
      token:
        type: string
        description: Token
  Error:
    type: object
    properties:
      message:
        type: string
